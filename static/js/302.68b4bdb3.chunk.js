(()=>{"use strict";let e=function(e){return e.SHAPE_CHANGE="SHAPE_CHANGE",e.INIT_USER="INIT_USER",e.INIT_CANVAS="INIT_CANVAS",e.MOUSE_MOVE_EVENT="MOUSE_MOVE_EVENT",e.LOAD_EVENTS="LOAD_EVENTS",e.DELETE_ALL_EVENTS="DELETE_ALL_EVENTS",e.NEW_EVENT_ADDED="NEW_EVENT_ADDED",e}({}),s=function(e){return e.NONE="NONE",e.LINE="LINE",e}({});class t{constructor(e,t,n){this.type=s.NONE,this.event_name=void 0,this.user_name=void 0,this.capture_canvas_dimensions=void 0,this.current_canvas_dimensions=void 0,this.current_canvas_dimensions=t,this.capture_canvas_dimensions=e,this.event_name=this.getNewEventID(),this.user_name=n}isEqual(e){return this.event_name===e.event_name}getNewEventID(){let e="";const s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let t=0;for(;t<10;)e+=s.charAt(Math.floor(62*Math.random())),t+=1;return e}render(e){throw new Error("Not implemented")}select(e){throw new Error("Not implemented")}exportToJson(){throw new Error("Not implemented")}}class n extends t{constructor(e,t,n,i){super(e,t,n),this.type=s.LINE,this.shape=void 0,this.shape=i}render(e){this.shape.forEach((s=>s.render(e,this.capture_canvas_dimensions,this.current_canvas_dimensions)))}select(e){throw new Error("Not implemented")}exportToJson(){return{type:this.type,event_name:this.event_name,user_name:this.user_name,capture_canvas_dimensions:this.capture_canvas_dimensions,current_canvas_dimensions:this.current_canvas_dimensions,shape:this.shape.map((e=>e.exportToJson()))}}}class i{constructor(){this.user_name=null,this.events=[]}isInitialised(){return null!==this.user_name}initialise(e){this.user_name=e}createEvent(e){if(null===this.user_name)return null;if(e.active_shape===s.LINE){const s=(t=this.user_name,i=e.shape,a=e.current_canvas_dimensions,new n(a,a,t,i));return this.events.push(s),s}var t,i,a;return null}}function a(e,s,t){return s===t?e:{x:e.x/t.x*s.x,y:e.y/t.y*s.y}}class r{exportToJson(){throw new Error("Not implemented")}render(e,s,t){throw new Error("Not implemented")}}class o extends r{constructor(e,s){super(),this.from_point=void 0,this.to_point=void 0,this.from_point=e,this.to_point=s}render(e,s,t){const n=a(this.from_point,t,s),i=a(this.to_point,t,s);e.beginPath(),e.moveTo(n.x,n.y),e.lineTo(i.x,i.y),e.closePath(),e.stroke()}exportToJson(){return{from_point:this.from_point,to_point:this.to_point}}}const h={x:-1,y:-1};class c{constructor(){this.active_shape=s.NONE,this.current_canvas_dimensions=h,this.shape=null,this.last_coordinates=h,this.is_mouse_down=!1,this.offscreen_canvas=null}reset(){this.last_coordinates=h,this.is_mouse_down=!1,this.shape=null}isInitialised(){return null!==this.offscreen_canvas}isInShapeCaptureMode(){return this.active_shape!==s.NONE}canCaptureShape(){return this.last_coordinates.x!==h.x&&this.last_coordinates.y!==h.y}initialise(e,s){const t=e.getContext("2d");null!==t&&(this.offscreen_canvas=t,this.current_canvas_dimensions=s)}onSelectedShapeChange(e){this.active_shape=e}onMouseMoveEvent(e,t){return this.active_shape!==s.NONE&&(this.canCaptureShape()?t?(this.captureShape(e),this.last_coordinates=e,!1):null!==this.shape:!!t&&(this.last_coordinates=e,this.is_mouse_down=!0,!1))}captureShape(e){if(null!==this.offscreen_canvas)switch(this.active_shape){case s.LINE:{const s=function(e,s,t,n,i){const a=new o(s,e);return a.render(t,n,i),a}(e,this.last_coordinates,this.offscreen_canvas,this.current_canvas_dimensions,this.current_canvas_dimensions);console.log(s),null===this.shape&&(this.shape=[]),this.shape.push(s);break}}}}const _=new class{constructor(){this.eventManager=new i,this.shapeManager=new c}onUserInit(e){this.eventManager.initialise(e)}onCanvasInit(e,s){this.eventManager.initialise("Vatsal"),this.shapeManager.initialise(e,s)}onSelectedShapeChange(e){this.shapeManager.onSelectedShapeChange(e),this.shapeManager.reset()}onMouseMoveEvent(e,s){if(!this.shapeManager.isInShapeCaptureMode())return null;if(!this.shapeManager.onMouseMoveEvent(e,s))return null;const t=this.eventManager.createEvent(this.shapeManager);return null===t?null:(this.shapeManager.reset(),t)}};onmessage=s=>{const t=s.data;switch(t.action){case e.INIT_USER:_.onUserInit(t.user_name);break;case e.INIT_CANVAS:_.onCanvasInit(t.canvas,t.dimensions);break;case e.SHAPE_CHANGE:_.onSelectedShapeChange(t.shape);break;case e.MOUSE_MOVE_EVENT:{const s=_.onMouseMoveEvent(t.point,t.isMouseDown);null!==s&&postMessage({type:e.NEW_EVENT_ADDED,event:s.exportToJson()});break}}}})();
//# sourceMappingURL=302.68b4bdb3.chunk.js.map